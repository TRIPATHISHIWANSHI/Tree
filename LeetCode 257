/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
       List<String> output=new ArrayList<>();
       String str="";
       //traverse all the tree
       traverse(root,str,output);
       return output;

    }
    public void traverse(TreeNode root,String str,List<String>output){
        //check if root is null
        if(root!=null){
            str+=root.val+"";//changing the root value to string so that it append
            if(root.left==null && root.right==null){
                output.add(str);
            }
            str+="->";
            traverse(root.left,str,output);
            traverse(root.right,str,output);
            
        }
    }
}
